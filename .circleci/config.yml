version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.9  # Choose an image that suits your needs

    working_directory: ~/repo
    parallelism: 4
    steps:
      - checkout

      - run:
          name: Install nvm and Node.js
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install 14
            nvm use 14
            # Ensure node is installed
            node -v

      - run:
          name: Check Node.js version
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            node -v

      - run:
          name: Install npm dependencies
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            npm install
            pwd
            ls -l
            
      - run:
          name: Install Jest
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            npm install --save-dev jest

      - run:
          name: Split tests across containers
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            # Save a list of test files
            mkdir -p test-results
            npx jest --listTests | circleci tests split --split-by=name > test-results/test-files-name.txt
            cat test-results/test-files-name.txt

      - run:
          name: Run Jest tests in parallel
          command: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            cat test-results/test-files-name.txt | xargs npx jest --runInBand --coverage
            
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: coverage
          destination: coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
